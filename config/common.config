#! /bin/bash
#----------------    全局变量 init  ---------------------------
if [[ -n "$rEnvValInited" ]]; then
    return
fi
# base
export rEnvValInited=true
export rUserName=$userName
export rDirNameXbash=$dirNameXbash
export rDirNameXbashConfig=config
export rDirNameXbashModule=module
export rDirPathTools=$dirPathHomeTools
export rDirPathUserHome=$dirPathHome
export rDirPathXbash=$dirPathHomeXbash
export rDirPathXbashConfig=$dirPathHomeXbashConfig
export rDirPathXbashModule=${rDirPathXbash}/${rDirNameXbashModule}
readonly rEnvValInited
readonly rUserName
readonly rDirNameXbash
readonly rDirNameXbashConfig
readonly rDirNameXbashModule
readonly rDirPathTools
readonly rDirPathXbash
readonly rDirPathUserHome
readonly rDirPathXbashConfig
readonly rDirPathXbashModule

# auto
export rFileNameXbashDBAuto=auto.database
export rFileNameXbashModuleAuto=auto.methods
export rDirPathXbashModuleAuto=${rDirPathXbashModule}/auto
export rFilePathXbashDBAuto=${rDirPathXbashModuleAuto}/${rFileNameXbashDBAuto}
export rFilePathXbashModuleAuto=${rDirPathXbashModuleAuto}/${rFileNameXbashModuleAuto}
readonly rFileNameXbashDBAuto
readonly rFileNameXbashModuleAuto
readonly rFilePathXbashDBAuto
readonly rFilePathXbashModuleAuto

# base
export rFileNameXbashDBBase=base.database
export rFileNameXbashModuleInput=bash_input.module
export rFileNameXbashModuleBaseAdbPush=push.module
export rFileNameXbashModuleBasePackaging=packaging.module
export rDirPathXbashModuleBase=${rDirPathXbashModule}/base
export rFilePathXbashDBBase=${rDirPathXbashModuleBase}/${rFileNameXbashDBBase}
export rFilePathXbashModuleInput=${rDirPathXbashModuleBase}/${rFileNameXbashModuleInput}
export rFilePathXbashModuleBaseAdbPush=${rDirPathXbashModuleBase}/${rFileNameXbashModuleBaseAdbPush}
export rFilePathXbashModuleBasePackaging=${rDirPathXbashModuleBase}/${rFileNameXbashModuleBasePackaging}
readonly rFileNameXbashDBBase
readonly rFileNameXbashModuleInput
readonly rFileNameXbashModuleBaseAdbPush
readonly rFileNameXbashModuleBasePackaging
readonly rDirPathXbashModuleBase
readonly rFilePathXbashDBBase
readonly rFilePathXbashModuleInput
readonly rFilePathXbashModuleBaseAdbPush
readonly rFilePathXbashModuleBasePackaging

# common
export rFileNameXbashModuleCommon=common.methods
export rFilePathXbashModuleCommon=${rDirPathXbashModule}/${rFileNameXbashModuleCommon}
readonly rFileNameXbashModuleCommon
readonly rFilePathXbashModuleCommon

#git
export rFileNameXbashModuleGit=git.methods
export rFileNameXbashModuleGitAddPatchToolExample=multiBranch.module.example
export rDirPathXbashModuleGit=${rDirPathXbashModule}/git
export rFilePathXbashModuleGit=${rDirPathXbashModuleGit}/${rFileNameXbashModuleGit}
export rFilePathXbashModuleGitAddPatchTool=${rDirPathXbashModuleGit}/${rFileNameXbashModuleGitAddPatchToolExample}
export rFilePathGitBash=${rDirPathXbashModuleGit}/git_completion.methods
export rFilePathAddPatchTool=${rDirPathXbashModule}/git/multiBranch.module
readonly rFileNameXbashModuleGit
readonly rFileNameXbashModuleGitAddPatchToolExample
readonly rDirPathXbashModuleGit
readonly rFilePathXbashModuleGitAddPatchTool
readonly rFilePathGitBash
readonly rFilePathXbashModuleGit
readonly rFilePathAddPatchTool

# maintain
export rFileNameXbashModuleMaintain=maintain.methods
export rDirPathXbashModuleMaintain=${rDirPathXbashModule}/maintain
readonly rFileNameXbashModuleMaintain
readonly rDirPathXbashModuleMaintain

#user
export rFileNameXbashConfigUser=${userName}.config
export rFileNameXbashDBUser=${rUserName}.database
export rFileNameXbashModuleUser=${userName}.module
export rDirPathXbashConfigUser=${rDirPathXbashConfig}/user
export rDirPathXbashModuleUser=${rDirPathXbashModule}/user
export rFileNameXbashDBUserExcepmale=user.database.example
export rFilePathXbashConfigUser=${rDirPathXbashConfigUser}/${rFileNameXbashConfigUser}
export rFilePathXbashDBUser=${rDirPathXbashModuleUser}/${rFileNameXbashDBUser}
export rFilePathXbashModuleUser=${rDirPathXbashModuleUser}/${rFileNameXbashModuleUser}
readonly rDirPathXbashConfigUser
readonly rDirPathXbashModuleUser
readonly rFileNameXbashConfigUser
readonly rFileNameXbashDBUser
readonly rFileNameXbashModuleUser
readonly rFileNameXbashDBUserExcepmale
readonly rFilePathXbashConfigUser
readonly rFilePathXbashDBUser
readonly rFilePathXbashModuleUser

#test
export rFileNameXbashModuleTestBase=test.module
export rFileNameXbashModuleTestBaseExpmale=test.module.example
export rFilePathXbashModuleTest=${rDirPathXbashModule}/${rFileNameXbashModuleTestBase}
readonly rFileNameXbashModuleTestBase
readonly rFileNameXbashModuleTestBaseExpmale
readonly rFilePathXbashModuleTest

#example
export rFileNameXbashConfigExample=user.config.expmale
export rDirPathXbashModuleExample=${rDirPathXbashModule}/example
export rFilePathXbashConfigExample=${rDirPathXbashModuleExample}/${rFileNameXbashConfigExample}
export rFilePathXbashDBUserExcepmale=${rDirPathXbashModuleExample}/${rFileNameXbashDBUserExcepmale}
export rFilePathXbashModuleTestExpmale=${rDirPathXbashModuleExample}/${rFileNameXbashModuleTestBaseExpmale}
export rFilePathXbashModuleGitAddPatchToolExample=${rDirPathXbashModuleExample}/${rFileNameXbashModuleGitAddPatchToolExample}
readonly rDirPathXbashModuleExample
readonly rFilePathXbashDBUserExcepmale
readonly rFilePathXbashModuleTestExpmale
readonly rFilePathXbashModuleGitAddPatchToolExample